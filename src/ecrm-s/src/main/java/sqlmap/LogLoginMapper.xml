<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="LogLogin" >
  <resultMap id="BaseResultMap" type="com.maven.entity.LogLogin" >
    <id column="code" property="code" jdbcType="INTEGER" />
    <result column="enterprisecode" property="enterprisecode" jdbcType="CHAR" />
    <result column="employeecode" property="employeecode" jdbcType="CHAR" />
    <result column="parentemployeecode" jdbcType="CHAR" property="parentemployeecode" />
    <result column="loginaccount" property="loginaccount" jdbcType="VARCHAR" />
    <result column="logintime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="loginip" property="loginip" jdbcType="CHAR" />
    <result column="machinecode" property="machinecode" jdbcType="VARCHAR" />
    <result column="opratesystem" property="opratesystem" jdbcType="VARCHAR" />
    <result column="browserversion" property="browserversion" jdbcType="VARCHAR" />
    <result column="refererurl" property="refererurl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    CODE,ENTERPRISECODE, BRANDCODE,EMPLOYEECODE,PARENTEMPLOYEECODE, LOGINACCOUNT, LOGINTIME, LOGINIP, MACHINECODE, OPRATESYSTEM, BROWSERVERSION, refererurl
  </sql>
  <!-- 范围查询 -->
  <sql id="rangeCondition">
  	<where>
  	  <if test="teamCodes !=null and teamCodes.length > 0">
  	  	and (parentemployeecode in 
  	  	<foreach collection="teamCodes" item="teamcode" separator="," open="(" close=")">
			#{teamcode}
		</foreach>
		<if test="teamLeaderCode != null" > or employeecode = #{teamLeaderCode} </if>)
	  </if>
  	  <if test="code != null" > and code = #{code}  </if>
      <if test="employeecode != null" > and employeecode = #{employeecode}  </if>
      <if test="enterprisecode != null" > and enterprisecode = #{enterprisecode}  </if>
      <if test="brandcode != null" > and brandcode = #{brandcode}  </if>
      <if test="employeecode != null" >and employeecode = #{employeecode} </if>
      <if test="parentemployeecode != null" >and parentemployeecode = #{parentemployeecode} </if>
      <if test="loginaccount != null" > and loginaccount = #{loginaccount}  </if>
      <if test="startDate != null" > and logintime <![CDATA[ >= ]]> #{startDate}</if>
      <if test="endDate != null" > and logintime <![CDATA[ <= ]]> #{endDate}  </if>
      <if test="loginip != null" > and loginip = #{loginip}  </if>
      <if test="machinecode != null" > and machinecode = #{machinecode}  </if>
      <if test="opratesystem != null" > and opratesystem = #{opratesystem}  </if>
      <if test="browserversion != null" > and browserversion = #{browserversion}  </if>
  	</where>
  </sql>
  <!-- 精确查询 -->
  <sql id="exactCondition">
  	<where>
      <if test="code != null" > and code = #{code}  </if>
      <if test="enterprisecode != null" > and enterprisecode = #{enterprisecode}  </if>
      <if test="brandcode != null" > and brandcode = #{brandcode}  </if>
      <if test="employeecode != null" > and employeecode = #{employeecode}  </if>
      <if test="parentemployeecode != null" >and parentemployeecode = #{parentemployeecode} </if>
      <if test="loginaccount != null" > and loginaccount = #{loginaccount}  </if>
      <if test="logintime != null" > and logintime = #{logintime}  </if>
      <if test="loginip != null" > and loginip = #{loginip}  </if>
      <if test="machinecode != null" > and machinecode = #{machinecode}  </if>
      <if test="opratesystem != null" > and opratesystem = #{opratesystem}  </if>
      <if test="browserversion != null" > and browserversion = #{browserversion}  </if>
      <if test="refererurl != null" > and refererurl = #{refererurl}  </if>
  	</where>
  </sql>
  
<!-- =================================================新增语句================================================================ -->
<insert id="add" parameterType="com.maven.entity.LogLogin" >
    insert into log_login (enterprisecode,brandcode, employeecode, parentemployeecode,loginaccount, logintime, 
    		loginip, machinecode, opratesystem, browserversion, refererurl) 
    values (#{enterprisecode},#{brandcode}, #{employeecode}, #{parentemployeecode},#{loginaccount}, #{logintime}, #{loginip}, #{machinecode}, 
			#{opratesystem}, #{browserversion}, #{refererurl})
</insert>
<!-- =================================================精确查询================================================================ -->
<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select <include refid="Base_Column_List" /> from log_login where code = #{code}
</select>
<!--   账号总览时,点击Ip地址调用该sql -->
<select id="findEmployeeLoginLog" resultMap="BaseResultMap" parameterType="Map" >
    select <include refid="Base_Column_List" /> from log_login where employeecode = #{employeecode} GROUP BY loginip ORDER BY logintime DESC LIMIT 5
</select>
<select id="select" resultMap="BaseResultMap" parameterType="com.maven.entity.LogLogin" >
    select <include refid="Base_Column_List" /> from log_login <include refid="exactCondition"/> order by logintime desc;
</select>
<select id="selectIpByLoginaccount" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select distinct LOGINIP from log_login where loginaccount = #{loginaccount}
</select>
<!-- =================================================模糊查询================================================================ -->
<select id="getAllIpLoginUser" resultMap="BaseResultMap" parameterType="java.util.HashMap">
<!-- 	<![CDATA[
    	{
    		call usp_user_login_info (
    								#{loginaccount,mode=IN,jdbcType=VARCHAR},
    								#{loginip,mode=IN,jdbcType=VARCHAR},
    								#{start,mode=IN,jdbcType=INTEGER},
    								#{limit,mode=IN,jdbcType=INTEGER},
    								#{count,mode=OUT,jdbcType=INTEGER}
    							)
    	}
	]]> -->
	SELECT * FROM 
  (SELECT  GROUP_CONCAT(DISTINCT ll.loginaccount) AS loginaccount,ll.enterprisecode AS enterprisecode ,ll.loginip AS loginip,MAX(ll.logintime) AS logintime FROM log_login ll  GROUP BY ll.enterprisecode,ll.loginip) AS llog
  <where> 
  	  <if test="enterprisecode != null" > and llog.enterprisecode = #{enterprisecode}  </if>
      <if test="loginaccount != null" > and llog.loginaccount like concat(concat('%',#{loginaccount}),'%')  </if>
      <if test="loginip != null" > and llog.loginip = #{loginip}  </if>
  </where> 
  <include refid="ABasic.page" />
</select>
<select id="getAllIpLoginUserCount" resultType="Integer" parameterType="java.util.HashMap">
	SELECT count(1) FROM 
  (SELECT  GROUP_CONCAT(DISTINCT ll.loginaccount) AS loginaccount,ll.enterprisecode AS enterprisecode ,ll.loginip AS loginip,MAX(ll.logintime) AS logintime FROM log_login ll  GROUP BY ll.enterprisecode,ll.loginip) AS llog
  <where> 
  	  <if test="enterprisecode != null" > and llog.enterprisecode = #{enterprisecode}  </if>
      <if test="loginaccount != null" > and llog.loginaccount like concat(concat('%',#{loginaccount}),'%')  </if>
      <if test="loginip != null" > and llog.loginip = #{loginip}  </if>
  </where> 
</select>

<select id="selectAll" resultMap="BaseResultMap" parameterType="com.maven.entity.LogLogin" >
    select <include refid="Base_Column_List" /> from log_login 
    <include refid="rangeCondition" /> 
    <include refid="ABasic.orderby" /> 
    <include refid="ABasic.page" />
</select>
<select id="selectAllCount" resultType="Long" parameterType="com.maven.entity.LogLogin" >
    select count(1) from log_login <include refid="rangeCondition" />
</select>
<!-- =================================================删除语句================================================================ -->
<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log_login where code = #{code}
</delete>
<!-- =================================================修改语句================================================================ -->
<update id="update" parameterType="com.maven.entity.LogLogin" >
    update log_login
    <set >
      <if test="code != null" > code = #{code} , </if>
      <if test="logintime != null" > logintime = #{logintime} , </if>
      <if test="loginip != null" > loginip = #{loginip} , </if>
      <if test="machinecode != null" > machinecode = #{machinecode} , </if>
      <if test="opratesystem != null" > opratesystem = #{opratesystem} , </if>
      <if test="browserversion != null" > browserversion = #{browserversion} , </if>
    </set>
    where code = #{code}
</update>
</mapper>