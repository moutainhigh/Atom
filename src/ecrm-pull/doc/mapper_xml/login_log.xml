<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.pull.mapper.LoginLogMapper">
	<!--插入记录 -->
	<insert id="insert" parameterType="hashmap">
		insert into api_login_log(loginlog_id,loginlog_name,loginlog_ip,loginlog_createtime)  values (#{loginlog_id},#{loginlog_name},#{loginlog_ip},#{loginlog_createtime})
	</insert>

	<!--批量插入记录 -->
	<insert id="batchInsert" parameterType="list">
		insert into api_login_log(loginlog_id,loginlog_name,loginlog_ip,loginlog_createtime)  values
		<foreach item="item" index="index" collection="array" separator=",">
			(#{item.loginlog_id},#{item.loginlog_name},#{item.loginlog_ip},#{item.loginlog_createtime})
		</foreach>
	</insert>
	
	<!--选择插入记录 -->
	<insert id="optInsert" parameterType="hashmap">
		insert into api_login_log
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="loginlog_id != null">
				loginlog_id,
			</if>
			<if test="loginlog_name != null">
				loginlog_name,
			</if>
			<if test="loginlog_ip != null">
				loginlog_ip,
			</if>
			<if test="loginlog_createtime != null">
				loginlog_createtime
			</if>
		</trim>
		<trim prefix=" values (" suffix=")" suffixOverrides="," >
			<if test="loginlog_id != null">
				#{loginlog_id},
			</if>
			<if test="loginlog_name != null">
				#{loginlog_name},
			</if>
			<if test="loginlog_ip != null">
				#{loginlog_ip},
			</if>
			<if test="loginlog_createtime != null">
				#{loginlog_createtime}
			</if>
		</trim>
	</insert>

	<!--根据实体删除记录 -->
	<delete id="delete" parameterType="hashmap">
		delete from api_login_log
		<where>
			<if test="loginlog_id != null">
				loginlog_id=#{loginlog_id}
			</if>
			<if test="loginlog_name != null">
				and loginlog_name=#{loginlog_name}
			</if>
			<if test="loginlog_ip != null">
				and loginlog_ip=#{loginlog_ip}
			</if>
			<if test="loginlog_createtime != null">
				and loginlog_createtime=#{loginlog_createtime}
			</if>
			<if test="ids != null">
				and loginlog_id in (${ids})
			</if>

		</where>
	</delete>

	<!--更新数据操作 -->
	<update id="update" parameterType="hashmap">
		update api_login_log
		<set>
			<if test="loginlog_name != null">
				loginlog_name=#{loginlog_name},
			</if>
			<if test="loginlog_ip != null">
				loginlog_ip=#{loginlog_ip},
			</if>
			<if test="loginlog_createtime != null">
				loginlog_createtime=#{loginlog_createtime}
			</if>
		</set>
		where loginlog_id=#{loginlog_id}
	</update>

	<!--批量更新记录 -->
	<update id="batchUpdate" parameterType="list">
		<foreach item="item" index="index" collection="array" separator=",">
			update api_login_log set
			loginlog_name=#{item.loginlog_name},loginlog_ip=#{item.loginlog_ip},loginlog_createtime=#{item.loginlog_createtime}
			where loginlog_id =#{item.loginlog_id}
		</foreach>
	</update>

	<!--根据主键查询单条记录 -->
	<select id="selectByPrimaryKey" resultType="hashmap" parameterType="string">
		select * from api_login_log a where a.loginlog_id=#{key}
	</select>

	<!--查询所有记录 -->
	<select id="selectAll" resultType="hashmap">
		select * from api_login_log a
	</select>

	<!--通过实体字段查询记录 -->
	<select id="selectByEntity" parameterType="hashmap" resultType="hashmap">
		select * from api_login_log a
		<where>
			<if test="loginlog_id != null">
				a.loginlog_id=#{loginlog_id}
			</if>
			<if test="loginlog_name != null">
				and a.loginlog_name=#{loginlog_name}
			</if>
			<if test="loginlog_ip != null">
				and a.loginlog_ip=#{loginlog_ip}
			</if>
			<if test="loginlog_createtime != null">
				and a.loginlog_createtime=#{loginlog_createtime}
			</if>

		</where>
		<choose>  
            <when test="order != null ">  
                order by a.${order}
            </when >             
            <otherwise>  
            	order by a.loginlog_id asc
            </otherwise>  
        </choose>
	</select>

	<!--通过实体字段模糊查询记录 -->
	<select id="selectByEntityLike" parameterType="hashmap" resultType="hashmap">
		select * from api_login_log a
		<where>
			<if test="loginlog_id != null">
				 a.loginlog_id like '%${loginlog_id}%'
			</if>
			<if test="loginlog_name != null">
				and a.loginlog_name like '%${loginlog_name}%'
			</if>
			<if test="loginlog_ip != null">
				and a.loginlog_ip like '%${loginlog_ip}%'
			</if>
			<if test="BEGIN_DATE != null and END_DATE != null">
				and a.loginlog_createtime between #{BEGIN_DATE} and #{END_DATE}
			</if>

		</where>
		<choose>  
            <when test="order != null ">  
                order by a.${order}
            </when >             
            <otherwise>  
            	order by a.loginlog_id asc
            </otherwise>  
        </choose>
	</select>

	<!--通过实体字段模糊查询记录分页 -->
	<select id="selectByEntityLikePage" parameterType="hashmap" resultType="hashmap">
		select * from api_login_log a
		<where>
			<if test="loginlog_id != null">
				 a.loginlog_id like '%${loginlog_id}%'
			</if>
			<if test="loginlog_name != null">
				and a.loginlog_name like '%${loginlog_name}%'
			</if>
			<if test="loginlog_ip != null">
				and a.loginlog_ip like '%${loginlog_ip}%'
			</if>
			<if test="BEGIN_DATE != null and END_DATE != null">
				and a.loginlog_createtime between #{BEGIN_DATE} and #{END_DATE}
			</if>

		</where>
		<choose>  
            <when test="order != null ">  
                order by a.${order}
            </when >             
            <otherwise>  
            	order by a.loginlog_id asc
            </otherwise>  
        </choose>
		limit #{pageIndex},#{pageSize}
	</select>

	<!--通过实体字段检索结果总数 -->
	<select id="count" resultType="int" parameterType="hashmap">
		select count(*) as total from api_login_log a
		<where>
			<if test="loginlog_id != null">
				 a.loginlog_id like '%${loginlog_id}%'
			</if>
			<if test="loginlog_name != null">
				and a.loginlog_name like '%${loginlog_name}%'
			</if>
			<if test="loginlog_ip != null">
				and a.loginlog_ip like '%${loginlog_ip}%'
			</if>
			<if test="BEGIN_DATE != null and END_DATE != null">
				and a.loginlog_createtime between #{BEGIN_DATE} and #{END_DATE}
			</if>

		</where>
	</select>

	<!--通过实体字段检索结果按某个字段求和汇总 -->
	<select id="sum" resultType="string" parameterType="hashmap">
		select COALESCE(sum(${COLUMN}),0) from api_login_log a
		<where>
			<if test="loginlog_id != null">
				 a.loginlog_id like '%${loginlog_id}%'
			</if>
			<if test="loginlog_name != null">
				and a.loginlog_name like '%${loginlog_name}%'
			</if>
			<if test="loginlog_ip != null">
				and a.loginlog_ip like '%${loginlog_ip}%'
			</if>
			<if test="BEGIN_DATE != null and END_DATE != null">
				and a.loginlog_createtime between #{BEGIN_DATE} and #{END_DATE}
			</if>

		</where>
	</select>
</mapper>